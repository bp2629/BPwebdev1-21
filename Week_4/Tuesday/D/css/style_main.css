/* How you load a google font or any external font in a css file */
/* We are essentially importing another stylesheet from elsewhere */
@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');

/* GLOBAL STYLES */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  background-color: black;
  /* This is how we get a full sized fixed image centered background */
  background: url('../img/bg.jpg') no-repeat center center fixed;
  background-size: cover;
}

/* apply the default font style at the body tag
so that all children elements inherit this style
we can always overwrite when neccessary */
body {
  font-family: 'Kaushan Script', serif;
  
}

/* To always make sure an image fits inside of its parent div
apply these style rules */
img {
  width: 100%;
  height: auto;
}



/* NAV */

header {
  width: 100%;
  height: 50px;
  padding: 0 10%;
  /* background-color: grey; */
  height: 50px;
  overflow-y: hidden;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  /* flex container properties there are flex containters and flex items  */
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  /* background: url(../img/denim.png); */

}

footer {
  width: 100%;
  height: 50px;
  padding: 0 10%;
  height: 50px;
  overflow-y: hidden;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 100;
  /* flex container properties there are flex containters and flex items  */
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  /* background: url(../img/denim.png); */

}

/* footer:hover{
  background-color: grey;
} */






header h1{
  color: black;
}

nav ul{
  display: flex;
  list-style-type: none;
  text-align: center;
  /* background-color: black; */
}

nav li{
  font-size: 18px;
  height: 50px;
  width: 120px;
  line-height: 50px;

}

nav a {
  display: block;
  text-decoration: none;
  color:black ;
  /* we always define transitions on the base/defalt state */

}

nav a:hover{
  background-color: white;
  color: black;
}

/* nav a.active{
  background-color: black;
  color: white;
} */

/* GALLERY */

.container {
  width: 900px;
  margin: 100px auto;
  /* when we use inline-block to stack elements
  we have to zero out the font size on the
  parent or container element*/
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;

}


.polaroid {
  width: 410px;
  margin:  20px;
  /* Whenever you want to abs position an element inside
  of another parent element, the parent element needs to be
  positioned as well */
  position: relative;
  text-align: center;
  height: 100%;
  aspect-ratio: 1/1;
}

.polaroid img{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: auto;
  transition: opacity 1s ease-out;
}

.polaroid .main{
  opacity: 1;
  z-index: 10;
}

.polaroid .alt{
  opacity: 0;
  z-index: 1;
}


/* descendant selector */
/* .polaroid img { */
  /* border shorthand is width, style, color */
  /* border: 10px solid #ccc;
  border-bottom-width: 45px;
} */

.polaroid p {
  font-size: 1rem;
  position: relative;
  display: inline-block;
  z-index: 100;
  width: 260px;
  color: black;
  /* align-items: center; */
}

/* TRANSFORMS AND TRANSISTIONS */

.polaroid:hover .main{
  opacity: 0;
}

.polaroid:hover .alt{
  opacity: 1;
}

/* Use the filer and transition for coming into color, but you have to use the color file */



/* PRODUCT PAGE */
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Courier New', Courier, monospace;
}

/* we always fill the image container with the image, then size the box around it */
img {
  width: 100%;
  height: auto;
}

/* Flexbox Simple Row Layouts */
/* Base Styles */
.page {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  /* some styles sp we can see our containers */
  justify-content: space-evenly;
  /* min-height: 400px; */
}



.item1 {
  width: 23%;
  height: 300px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;
  top: 300px;
  
}

.item1 h2 {
  margin-top: 0; /* Ensure no extra margin at the top */
  margin-bottom: 10px; /* Space below the heading */
}

.item1 ul {
  padding-left: 20px; /* Align list items with some indentation */
}

.item1 li {
  margin-bottom: 5px; /* Space between list items */
}

.item2 {

  width: 50%;
  height: 900px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  overflow-y: auto;
}

.item2 img{
  width: 100%;
  height: auto;
  position: relative;
  padding-top: 100px;
  padding-bottom: 100px;
}


.item3 {

  width: 23%;
  height: 300px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;
  top: 300px;
  
}

.item3 h2 {
  margin-top: 0; /* Ensure no extra margin at the top */
  margin-bottom: 10px; /* Space below the heading */
}

.item3 ul {
  padding-left: 20px; /* Align list items with some indentation */
}

.item3 li {
  margin-bottom: 5px; /* Space between list items */
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Atomic Styles */


.justify-center {
  justify-content: center;
}


.align-center {
  align-items: center;
}



/* Media Queries are for Applying Different
Styles on Different Size Screens */

/* Always have media queries at the end of your CSS doc  */
@media screen and (max-width: 768px) {
  body {
    background-color: chartreuse;
  }

  .container {
    flex-direction: column;
    align-items: center;
  }

  .item {
    width: 95%;
    margin: 1rem auto;
  }

  .self-stretch {
    height: 300px;
    width: auto;
  }
}

/*  Simple Classic Layout Using Flexbox */






/* Tablet */
@media screen and (max-width: 1024px) {
  .grid-item {
    width: 48%;
  }
}

/* Mobile */
@media screen and (max-width: 768px) {
  .wrapper {
    flex-direction: column;
  }

  .secondary-nav {
    order: 1;
  }

  .grid-container {
    order: 2;
    flex-direction: column;
  }

  .grid-item {
    width: 95%;
  }
}